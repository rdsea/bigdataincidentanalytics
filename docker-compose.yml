version: '3.4'

x-fluentd-logging:
  &custom-logging
  logging:
    driver: fluentd
    options:
      fluentd-address: localhost:24224
      tag: docker.{{.Name}}

services:

  ##### IoT Sensors #####
  simplesensor:
    image: danielfuvesi/bigdataincidentanalytics:simplesensor
    networks:
      - iot-big-data
    volumes:
      - ./sensors/simplesensor:/var/config
    command: npm start -- -c /var/config/config.json
    << : *custom-logging

  ##### MQTT Broker #####
  mqtt:
    image: eclipse-mosquitto
    container_name: mqtt
    domainname: iot-big-data
    networks:
      - iot-big-data
    ports:
      - 1883:1883
      - 9001:9001
    << : *custom-logging

  ##### FLINK #####
  flink_jobmanager:
    build: ./flink
    container_name: jobmanager
    expose:
      - 6123
      - 9249
    ports:
      - 8081:8081
    networks:
      - iot-big-data
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    << : *custom-logging

  flink_taskmanager:
    build: ./flink
    expose:
      - 6121
      - 6122
      - 9249
    networks:
      - iot-big-data
    depends_on:
      - flink_jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    << : *custom-logging

  ##### NIFI #####
  nifi:
    build: ./nifi
    hostname: nifi
    container_name: nifi
    volumes:
      - ./nifi/logs:/opt/nifi/nifi-current/logs
      - ./hadoop/config:/opt/nifi/nifi-current/hadoop
    networks:
      - iot-big-data
    ports:
      - 8080:8080
    << : *custom-logging

  ##### HADOOP #####
  namenode:
    image: uhopper/hadoop-namenode
    hostname: namenode
    container_name: namenode
    expose:
      - 8020
    networks:
      - iot-big-data
    volumes:
      - /hadoop/dfs/name
      - ./hadoop/hadoop_setup.sh:/usr/local/bin/hadoop_setup.sh
    command: hadoop_setup.sh
    environment:
      - CLUSTER_NAME=myCluster
    ports:
      - 50070:50070
    << : *custom-logging

  datanode1:
    image: uhopper/hadoop-datanode
    hostname: datanode1
    container_name: datanode1
    networks:
      - iot-big-data
    volumes:
      - /hadoop/dfs/data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - HDFS_CONF_dfs_permissions=false
    << : *custom-logging

  resourcemanager:
    image: uhopper/hadoop-resourcemanager
    hostname: resourcemanager
    container_name: resourcemanager
    networks:
      - iot-big-data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - YARN_CONF_yarn_log___aggregation___enable=true
      - HDFS_CONF_dfs_permissions=false
    ports:
      - 8088:8088
    << : *custom-logging

  nodemanager1:
    image: uhopper/hadoop-nodemanager
    hostname: nodemanager1
    container_name: nodemanager1
    networks:
      - iot-big-data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
      - YARN_CONF_yarn_log___aggregation___enable=true
      - YARN_CONF_yarn_nodemanager_remote___app___log___dir=/app-logs
      - HDFS_CONF_dfs_permissions=false
    << : *custom-logging

  ##### Node-RED #####
  nodered:
    image: nodered/node-red-docker:slim
    ports:
      - 1880:1880
    networks:
      - iot-big-data
    volumes:
      - ./nodered:/data
    << : *custom-logging

  ##### ELK Stack #####
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: elasticsearch
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - iot-big-data

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: kibana
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - 5601:5601
    networks:
      - iot-big-data
    depends_on:
      - elasticsearch

  #################################### SERVICES FOR MONITORING ####################################

  # THIS SERVICE IS DEFINED JUST FOR COMPLETENESS. FLUENTD *MUST* BE STARTED ON HOST BEFORE ANY OTHER SERVICE,
  # OTHERWISE THE OTHER CONTAINERS CAN'T START DUE TO MISSING LOGGING DRIVER.
  fluentd:
    build: ./fluentd
    container_name: fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
      - ./fluentd/logs:/fluentd/log/bigdataincidentanalytics
    networks:
      - iot-big-data
    ports:
      - 24224:24224
      - 24224:24224/udp

  # PROMETHEUS
  prometheus:
    image: prom/prometheus:v2.7.1
    container_name: prometheus
    ports:
      - 9090:9090
    networks:
      - iot-big-data
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - cadvisor

  # PROMETHEUS "PUSH" CAPABILITY
  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    ports:
      - 9091:9091
    networks:
      - iot-big-data

  # CONTAINER ADVISOR
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8082:8080
    networks:
      - iot-big-data
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  # MOSQUITTO PROMETHEUS EXPORTER
  mqtt_exporter:
    image: sapcc/mosquitto-exporter:0.5.0
    container_name: mosquitto-exporter
    networks:
      - iot-big-data
    ports:
      - 9234:9234
    environment:
      - BROKER_ENDPOINT=tcp://mqtt:1883
    depends_on:
      - mqtt

  # HADOOP NAMENODE PROMETHEUS EXPORTER
  namenode_exporter:
    image: danielfuvesi/bigdataincidentanalytics:hadoop-namenode-exporter
    container_name: hadoop-namenode-exporter
    networks:
      - iot-big-data
    command: -namenode.jmx.url "http://namenode:50070/jmx"
    depends_on:
      - namenode

  # HADOOP RESOURCEMANAGER PROMETHEUS EXPORTER
  resourcemanager_exporter:
    image: danielfuvesi/bigdataincidentanalytics:hadoop-resourcemanager-exporter
    container_name: hadoop-resourcemanager-exporter
    networks:
      - iot-big-data
    command: -resourcemanager.url "http://resourcemanager:8088"
    depends_on:
      - resourcemanager

  # ELASTICSEARCH PROMETHEUS EXPORTER
  elasticsearch_exporter:
    image: justwatch/elasticsearch_exporter:1.0.2
    container_name: elasticsearch-exporter
    command: -es.uri=http://elasticsearch:9200
    restart: always
    ports:
      - 9108:9108
    networks:
      - iot-big-data
    depends_on:
      - elasticsearch

  # GRAFANA FOR DISPLAYING METRICS
  grafana:
    image: grafana/grafana:5.4.3
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - iot-big-data
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
    - ./grafana/provisioning/:/etc/grafana/provisioning/

  packetbeat:
    build:
      context: packetbeat/
      args:
        ELK_VERSION: $ELK_VERSION
    depends_on:
      - elasticsearch
    cap_add:
      - NET_ADMIN
    networks:
      - iot-big-data
    environment:
      - OUTPUT_ELASTICSEARCH_HOSTS=["http://elasticserach:9200"]
      - KIBANA_HOST=http://kibana:5601

networks:
  iot-big-data:
    driver: bridge