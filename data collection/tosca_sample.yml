tosca_definitions_version: cloudify_dsl_1_3
imports:
  - 'http://www.getcloudify.org/spec/cloudify/4.5.5/types.yaml'
inputs:
  host_ip:
    description: |
      The ip of the host the application will be deployed on
  agent_user:
    description: |
      User name used when SSH-ing into the started machine
  agent_private_key_path:
    description: >
      Path to a private key that resided on the management machine. SSH-ing into
      agent machines will be done with this key.
node_types:
  nodecellar.nodes.NodeJSServer:
    derived_from: cloudify.nodes.ApplicationServer
relationships:
  analytics_data_moves_to:
    derived_from: cloudify.relationships.connected_to
    properties: {}
    source_interfaces: {}
    target_interfaces: {}
  analytics_reads_data_from:
    derived_from: cloudify.relationships.connected_to
    properties: {}
    source_interfaces: {}
    target_interfaces: {}
node_templates:
  Sensor Docker Container:
    type: cloudify.nodes.Container
    relationships:
      - type: cloudify.relationships.contained_in
        target: Sensor Provider Host
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Sensor Data Broadcast:
    type: cloudify.nodes.ApplicationModule
    capabilities:
      scalable:
        properties:
          default_instances: 1
    relationships:
      - target: Sensor Docker Container
        type: cloudify.relationships.contained_in
      - target: MQTT Broker
        type: analytics_data_moves_to
        properties:
          connection_type: all_to_one
  MQTT Broker:
    type: cloudify.nodes.MessageBusServer
    relationships:
      - type: cloudify.relationships.contained_in
        target: MQTT Docker Container
      - target: Nifi Flows
        type: analytics_data_moves_to
      - target: Node-RED Flows
        type: analytics_data_moves_to
      - target: Flink Job
        type: analytics_data_moves_to
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Nifi Docker Container:
    type: cloudify.nodes.Container
    relationships:
      - target: Nifi Provider Host
        type: cloudify.relationships.contained_in
    capabilities:
      scalable:
        properties:
          default_instances: 1
  MQTT Docker Container:
    type: cloudify.nodes.Container
    relationships:
      - target: MQTT Provider Host
        type: cloudify.relationships.contained_in
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Nifi Flows:
    type: cloudify.nodes.ApplicationModule
    relationships:
      - type: cloudify.relationships.contained_in
        target: Nifi Docker Container
      - target: Namenode Docker
        type: analytics_data_moves_to
        properties:
          connection_type: all_to_one
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Sensor Provider Host:
    type: cloudify.nodes.Compute
    capabilities:
      scalable:
        properties:
          default_instances: 1
    relationships: []
  MQTT Provider Host:
    type: cloudify.nodes.Compute
    capabilities:
      scalable:
        properties:
          default_instances: 1
    relationships: []
  Nifi Provider Host:
    type: cloudify.nodes.Compute
    capabilities:
      scalable:
        properties:
          default_instances: 1
    relationships: []
  Hadoop Provider Host:
    type: cloudify.nodes.Compute
    capabilities:
      scalable:
        properties:
          default_instances: 1
    relationships: []
  Namenode Docker:
    type: cloudify.nodes.Container
    relationships:
      - type: cloudify.relationships.contained_in
        target: Hadoop Provider Host
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Resourcemanager Docker:
    type: cloudify.nodes.Container
    relationships:
      - type: cloudify.relationships.contained_in
        target: Hadoop Provider Host
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Datanode Docker:
    type: cloudify.nodes.Container
    relationships:
      - type: cloudify.relationships.contained_in
        target: Hadoop Provider Host
    capabilities:
      scalable:
        properties:
          default_instances: 5
  Nodemanager Docker:
    type: cloudify.nodes.Container
    relationships:
      - type: cloudify.relationships.contained_in
        target: Hadoop Provider Host
    capabilities:
      scalable:
        properties:
          default_instances: 5
  Node-RED Provider Host:
    type: cloudify.nodes.Compute
    capabilities:
      scalable:
        properties:
          default_instances: 1
    relationships: []
  Node-RED Docker:
    type: cloudify.nodes.Container
    relationships:
      - type: cloudify.relationships.contained_in
        target: Node-RED Provider Host
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Node-RED Flows:
    type: cloudify.nodes.ApplicationModule
    relationships:
      - type: cloudify.relationships.contained_in
        target: Node-RED Docker
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Flink Provider Host:
    type: cloudify.nodes.Compute
    capabilities:
      scalable:
        properties:
          default_instances: 1
  TaskManager Docker:
    type: cloudify.nodes.Container
    capabilities:
      scalable:
        properties:
          default_instances: 5
    relationships:
      - target: Flink Provider Host
        type: cloudify.relationships.contained_in
  JobManager Docker:
    type: cloudify.nodes.Container
    capabilities:
      scalable:
        properties:
          default_instances: 1
    relationships:
      - target: Flink Provider Host
        type: cloudify.relationships.contained_in
  Flink Job:
    type: cloudify.nodes.ApplicationModule
    relationships:
      - type: cloudify.relationships.contained_in
        target: TaskManager Docker
      - target: Elasticsearch
        type: analytics_data_moves_to
    capabilities:
      scalable:
        properties:
          default_instances: 1
  ELK Provider Host:
    type: cloudify.nodes.Compute
    capabilities:
      scalable:
        properties:
          default_instances: 1
    relationships: []
  Elasticsearch Docker:
    type: cloudify.nodes.Container
    relationships:
      - type: cloudify.relationships.contained_in
        target: ELK Provider Host
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Elasticsearch:
    type: cloudify.nodes.Database
    relationships:
      - type: cloudify.relationships.contained_in
        target: Elasticsearch Docker
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Spark Provider Host:
    type: cloudify.nodes.Compute
    capabilities:
      scalable:
        properties:
          default_instances: 1
    relationships: []
  Spark Client Host:
    type: cloudify.nodes.Compute
    capabilities:
      scalable:
        properties:
          default_instances: 1
    relationships: []
  Spark App Docker:
    type: cloudify.nodes.Container
    relationships:
      - type: cloudify.relationships.contained_in
        target: Spark Client Host
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Spark App:
    type: cloudify.nodes.ApplicationModule
    relationships:
      - type: cloudify.relationships.contained_in
        target: Spark App Docker
      - target: Master Docker
        type: cloudify.relationships.connected_to
      - target: Namenode Docker
        type: analytics_reads_data_from
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Master Docker:
    type: cloudify.nodes.Container
    relationships:
      - type: cloudify.relationships.contained_in
        target: Spark Provider Host
      - target: Worker Docker
        type: cloudify.relationships.connected_to
    capabilities:
      scalable:
        properties:
          default_instances: 1
  Worker Docker:
    type: cloudify.nodes.Container
    relationships:
      - type: cloudify.relationships.contained_in
        target: Spark Provider Host
    capabilities:
      scalable:
        properties:
          default_instances: 5
